package com.MsgSend.pro;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;

import org.apache.catalina.websocket.MessageInbound;
import org.apache.catalina.websocket.WsOutbound;

public class ChatMsgInbound extends MessageInbound {

/**
 * 当关闭时
 */
	
	@Override
	protected void onClose(int status) {
		ChatMsgInboundPool.getMessageInbound().remove(this);
		super.onClose(status);
	}
	/**
	 * 客户端与服务器建立连接是
	 */
	@Override
	protected void onOpen(WsOutbound outbound) {
		ChatMsgInboundPool.getMessageInbound().add(this);
		super.onOpen(outbound);
	}
	/**
	 * java.nio
	 * 当接收到二进制的消息内容是怎么处理
	 */
	@Override
	protected void onBinaryMessage(ByteBuffer byteBuffer) throws IOException {
		for(MessageInbound msgIn :ChatMsgInboundPool.getMessageInbound()){
			ByteBuffer bb = ByteBuffer.wrap(byteBuffer.array());
			WsOutbound ws = msgIn.getWsOutbound();
			ws.writeBinaryMessage(bb);
			ws.flush();
		}
	}
	/**
	 * 当接收到文本的消息内容时，怎么处理
	 */
	@Override
	protected void onTextMessage(CharBuffer charBuffer) throws IOException {
		for(MessageInbound msgIn :ChatMsgInboundPool.getMessageInbound()){
			CharBuffer cb = CharBuffer.wrap(charBuffer);
			WsOutbound ws = msgIn.getWsOutbound();
			ws.writeTextMessage(cb);
			ws.flush();
		}
	}

}
